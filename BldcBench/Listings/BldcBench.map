Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.EXTI15_10_IRQHandler) refers to queue.o(i.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(i.EXTI15_10_IRQHandler) refers to main.o(.data) for buttonClickSemaphore
    main.o(i.commandReciveTask) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(i.commandReciveTask) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.commandReciveTask) refers to main.o(.data) for uart2ReciveSemaphore
    main.o(i.controlTask) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(i.controlTask) refers to motorcontrol.o(i.setSpeed) for setSpeed
    main.o(i.controlTask) refers to motorcontrol.o(i.startMotor) for startMotor
    main.o(i.controlTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.controlTask) refers to tasks.o(i.vTaskResume) for vTaskResume
    main.o(i.controlTask) refers to tasks.o(i.vTaskDelete) for vTaskDelete
    main.o(i.controlTask) refers to tasks.o(i.vTaskSuspend) for vTaskSuspend
    main.o(i.controlTask) refers to motorcontrol.o(i.stopMotor) for stopMotor
    main.o(i.controlTask) refers to main.o(.data) for buttonClickSemaphore
    main.o(i.controlTask) refers to main.o(i.speedCntrTask) for speedCntrTask
    main.o(i.main) refers to rcc.o(i.RccClockInit) for RccClockInit
    main.o(i.main) refers to bsp.o(i.uart2Init) for uart2Init
    main.o(i.main) refers to bsp.o(i.uart1Init) for uart1Init
    main.o(i.main) refers to main.o(i.buttonInit) for buttonInit
    main.o(i.main) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskSuspend) for vTaskSuspend
    main.o(i.main) refers to main.o(i.Tim4Init) for Tim4Init
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for commandQueue
    main.o(i.main) refers to main.o(i.measureTask) for measureTask
    main.o(i.main) refers to main.o(i.controlTask) for controlTask
    main.o(i.measureTask) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    main.o(i.measureTask) refers to motorcontrol.o(i.getSpeed) for getSpeed
    main.o(i.measureTask) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    main.o(i.measureTask) refers to bsp.o(i.uartTransmitt) for uartTransmitt
    main.o(i.measureTask) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    main.o(i.speedCntrTask) refers to motorcontrol.o(i.setSpeed) for setSpeed
    main.o(i.speedCntrTask) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    encoder.o(i.TIM2_IRQHandler) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    encoder.o(i.TIM2_IRQHandler) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    encoder.o(i.TIM2_IRQHandler) refers to encoder.o(.data) for statusFlag
    encoder.o(i.TIM5_IRQHandler) refers to encoder.o(.data) for speed
    encoder.o(i.encoderInit) refers to encoder.o(i.tim5Init) for tim5Init
    encoder.o(i.encoderInit) refers to encoder.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    encoder.o(i.tim5Init) refers to encoder.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    motorcontrol.o(i.faultAck) refers to mcp.o(i.mcpCommand) for mcpCommand
    motorcontrol.o(i.getFlux) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getMotorPower) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getMotorState) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getReferenceSpeed) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getRegulatorTorqueRef) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getSpeed) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.getTorque) refers to mcp.o(i.mcpGetRegister) for mcpGetRegister
    motorcontrol.o(i.setCurrent) refers to mcp.o(i.mcpSetCurrentRef) for mcpSetCurrentRef
    motorcontrol.o(i.setFluxPID) refers to mcp.o(i.mcpSetRegister) for mcpSetRegister
    motorcontrol.o(i.setSpeed) refers to mcp.o(i.mcpRamp) for mcpRamp
    motorcontrol.o(i.setSpeedPID) refers to mcp.o(i.mcpSetRegister) for mcpSetRegister
    motorcontrol.o(i.setTorquePID) refers to mcp.o(i.mcpSetRegister) for mcpSetRegister
    motorcontrol.o(i.startMotor) refers to mcp.o(i.mcpCommand) for mcpCommand
    motorcontrol.o(i.stopMotor) refers to mcp.o(i.mcpCommand) for mcpCommand
    mcp.o(i.mcpCommand) refers to mcp.o(i.mcpCalculateCRC) for mcpCalculateCRC
    mcp.o(i.mcpCommand) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    mcp.o(i.mcpCommand) refers to bsp.o(i.uartRecive) for uartRecive
    mcp.o(i.mcpCommand) refers to bsp.o(.bss) for frameBuff
    mcp.o(i.mcpGetRegister) refers to mcp.o(i.mcpCalculateCRC) for mcpCalculateCRC
    mcp.o(i.mcpGetRegister) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    mcp.o(i.mcpGetRegister) refers to bsp.o(i.uartRecive) for uartRecive
    mcp.o(i.mcpGetRegister) refers to bsp.o(.bss) for frameBuff
    mcp.o(i.mcpRamp) refers to mcp.o(i.mcpCalculateCRC) for mcpCalculateCRC
    mcp.o(i.mcpRamp) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    mcp.o(i.mcpRamp) refers to bsp.o(i.uartRecive) for uartRecive
    mcp.o(i.mcpRamp) refers to bsp.o(.bss) for frameBuff
    mcp.o(i.mcpSetCurrentRef) refers to mcp.o(i.mcpCalculateCRC) for mcpCalculateCRC
    mcp.o(i.mcpSetCurrentRef) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    mcp.o(i.mcpSetCurrentRef) refers to bsp.o(i.uartRecive) for uartRecive
    mcp.o(i.mcpSetCurrentRef) refers to bsp.o(.bss) for frameBuff
    mcp.o(i.mcpSetRegister) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    mcp.o(i.mcpSetRegister) refers to mcp.o(i.mcpCalculateCRC) for mcpCalculateCRC
    mcp.o(i.mcpSetRegister) refers to bsp.o(i.uartTransmittBuff) for uartTransmittBuff
    mcp.o(i.mcpSetRegister) refers to bsp.o(i.uartRecive) for uartRecive
    mcp.o(i.mcpSetRegister) refers to bsp.o(.bss) for frameBuff
    bsp.o(i.USART1_IRQHandler) refers to bsp.o(.bss) for frameBuff
    bsp.o(i.USART1_IRQHandler) refers to bsp.o(.data) for reciveStatus
    bsp.o(i.USART2_IRQHandler) refers to bsp.o(.data) for uart2ReciveState
    bsp.o(i.uart1Init) refers to bsp.o(i.Tim9Init) for Tim9Init
    bsp.o(i.uart2Init) refers to bsp.o(i.Tim9Init) for Tim9Init
    bsp.o(i.uartRecive) refers to bsp.o(.data) for reciveStatus
    bsp.o(i.uartRecive) refers to bsp.o(.bss) for frameBuff
    bsp.o(i.uartTransmittBuff) refers to bsp.o(i.uartTransmitt) for uartTransmitt
    startup_stm32f411xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(STACK) for __initial_sp
    startup_stm32f411xe.o(RESET) refers to startup_stm32f411xe.o(.text) for Reset_Handler
    startup_stm32f411xe.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_stm32f411xe.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f411xe.o(RESET) refers to encoder.o(i.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f411xe.o(RESET) refers to bsp.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f411xe.o(RESET) refers to bsp.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f411xe.o(RESET) refers to main.o(i.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f411xe.o(RESET) refers to encoder.o(i.TIM5_IRQHandler) for TIM5_IRQHandler
    startup_stm32f411xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f411xe.o(.text) refers to system_stm32f4xx.o(i.SystemInit) for SystemInit
    startup_stm32f411xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(HEAP) for Heap_Mem
    startup_stm32f411xe.o(.text) refers to startup_stm32f411xe.o(STACK) for Stack_Mem
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.constdata) for AHBPrescTable
    event_groups.o(i.vEventGroupClearBitsCallback) refers to event_groups.o(i.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.vEventGroupDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.vEventGroupSetBitsCallback) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    event_groups.o(i.xEventGroupCreate) refers to list.o(i.vListInitialise) for vListInitialise
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSync) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupWaitBits) refers to event_groups.o(i.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.bss) for ucHeap
    heap_4.o(i.prvHeapInit) refers to heap_4.o(.data) for xStart
    heap_4.o(i.prvInsertBlockIntoFreeList) refers to heap_4.o(.data) for xStart
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvHeapInit) for prvHeapInit
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.pvPortMalloc) refers to heap_4.o(.data) for pxEnd
    heap_4.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortFree) refers to heap_4.o(i.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortFree) refers to heap_4.o(.data) for xBlockAllocatedBit
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(i.vPortGetHeapStats) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(i.vPortGetHeapStats) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_4.o(i.vPortGetHeapStats) refers to heap_4.o(.data) for xStart
    heap_4.o(i.xPortGetFreeHeapSize) refers to heap_4.o(.data) for xFreeBytesRemaining
    heap_4.o(i.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.data) for xMinimumEverFreeBytesRemaining
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    port.o(i.vPortSetupTimerInterrupt) refers to port.o(.data) for ulTimerCountsForOneTick
    port.o(i.vPortSuppressTicksAndSleep) refers to tasks.o(i.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(i.vPortSuppressTicksAndSleep) refers to tasks.o(i.vTaskStepTick) for vTaskStepTick
    port.o(i.vPortSuppressTicksAndSleep) refers to port.o(.data) for xMaximumPossibleSuppressedTicks
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.emb_text) for vPortGetIPSR
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.data) for ucMaxSysCallPriority
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvEnableVFP
    port.o(i.xPortStartScheduler) refers to port.o(.data) for ucMaxSysCallPriority
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    stream_buffer.o(i.prvInitialiseNewStreamBuffer) refers to memset.o(.text) for memset
    stream_buffer.o(i.prvInitialiseNewStreamBuffer) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(i.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(i.prvReadMessageFromBuffer) refers to stream_buffer.o(i.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(i.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(i.prvWriteMessageToBuffer) refers to stream_buffer.o(i.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(i.vStreamBufferDelete) refers to heap_4.o(i.vPortFree) for vPortFree
    stream_buffer.o(i.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(i.xStreamBufferBytesAvailable) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferGenericCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(i.xStreamBufferGenericCreate) refers to stream_buffer.o(i.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(i.xStreamBufferIsFull) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(i.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferReceive) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(i.xStreamBufferReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(i.xStreamBufferReceive) refers to stream_buffer.o(i.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(i.xStreamBufferReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(i.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to stream_buffer.o(i.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(i.xStreamBufferReceiveFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferReset) refers to stream_buffer.o(i.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(i.xStreamBufferReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(i.xStreamBufferSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(i.xStreamBufferSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(i.xStreamBufferSend) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(i.xStreamBufferSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(i.xStreamBufferSendCompletedFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to stream_buffer.o(i.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(i.xStreamBufferSendFromISR) refers to tasks.o(i.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(i.prvIdleTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(i.prvIdleTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(.data) for xNextTaskUnblockTime
    tasks.o(i.prvInitialiseNewTask) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTasksWithinSingleList) refers to tasks.o(i.vTaskGetInfo) for vTaskGetInfo
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyValueClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyValueClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyValueClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.vTaskGetInfo) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskStepTick) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskCatchUpTicks) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_4.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.xTaskGetIdleTaskHandle) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    memset.o(.text) refers to rt_memclr.o(.text) for _memset
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f411xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.commandReciveTask), (160 bytes).
    Removing encoder.o(.rev16_text), (4 bytes).
    Removing encoder.o(.revsh_text), (4 bytes).
    Removing encoder.o(.rrx_text), (6 bytes).
    Removing encoder.o(i.__NVIC_EnableIRQ), (34 bytes).
    Removing encoder.o(i.encoderInit), (144 bytes).
    Removing encoder.o(i.tim5Init), (80 bytes).
    Removing rcc.o(.rev16_text), (4 bytes).
    Removing rcc.o(.revsh_text), (4 bytes).
    Removing rcc.o(.rrx_text), (6 bytes).
    Removing motorcontrol.o(.rev16_text), (4 bytes).
    Removing motorcontrol.o(.revsh_text), (4 bytes).
    Removing motorcontrol.o(.rrx_text), (6 bytes).
    Removing motorcontrol.o(i.faultAck), (16 bytes).
    Removing motorcontrol.o(i.getFlux), (36 bytes).
    Removing motorcontrol.o(i.getMotorPower), (36 bytes).
    Removing motorcontrol.o(i.getMotorState), (36 bytes).
    Removing motorcontrol.o(i.getReferenceSpeed), (38 bytes).
    Removing motorcontrol.o(i.getRegulatorTorqueRef), (36 bytes).
    Removing motorcontrol.o(i.getTorque), (36 bytes).
    Removing motorcontrol.o(i.setCurrent), (22 bytes).
    Removing motorcontrol.o(i.setFluxPID), (84 bytes).
    Removing motorcontrol.o(i.setSpeedPID), (84 bytes).
    Removing motorcontrol.o(i.setTorquePID), (84 bytes).
    Removing motorcontrol.o(.data), (4 bytes).
    Removing mcp.o(.rev16_text), (4 bytes).
    Removing mcp.o(.revsh_text), (4 bytes).
    Removing mcp.o(.rrx_text), (6 bytes).
    Removing mcp.o(i.mcpSetCurrentRef), (92 bytes).
    Removing mcp.o(i.mcpSetRegister), (100 bytes).
    Removing mcp.o(.data), (4 bytes).
    Removing bsp.o(.rev16_text), (4 bytes).
    Removing bsp.o(.revsh_text), (4 bytes).
    Removing bsp.o(.rrx_text), (6 bytes).
    Removing system_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing system_stm32f4xx.o(i.SystemCoreClockUpdate), (192 bytes).
    Removing system_stm32f4xx.o(.constdata), (24 bytes).
    Removing event_groups.o(i.prvTestWaitCondition), (30 bytes).
    Removing event_groups.o(i.uxEventGroupGetNumber), (14 bytes).
    Removing event_groups.o(i.vEventGroupClearBitsCallback), (16 bytes).
    Removing event_groups.o(i.vEventGroupDelete), (82 bytes).
    Removing event_groups.o(i.vEventGroupSetBitsCallback), (16 bytes).
    Removing event_groups.o(i.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(i.xEventGroupClearBits), (92 bytes).
    Removing event_groups.o(i.xEventGroupCreate), (26 bytes).
    Removing event_groups.o(i.xEventGroupGetBitsFromISR), (44 bytes).
    Removing event_groups.o(i.xEventGroupSetBits), (206 bytes).
    Removing event_groups.o(i.xEventGroupSync), (272 bytes).
    Removing event_groups.o(i.xEventGroupWaitBits), (344 bytes).
    Removing heap_4.o(i.vPortGetHeapStats), (128 bytes).
    Removing heap_4.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(i.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(i.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing port.o(i.vPortEndScheduler), (48 bytes).
    Removing queue.o(i.prvCopyDataFromQueue), (42 bytes).
    Removing queue.o(i.prvInitialiseMutex), (30 bytes).
    Removing queue.o(i.prvIsQueueFull), (30 bytes).
    Removing queue.o(i.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (6 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (42 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (34 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (48 bytes).
    Removing queue.o(i.vQueueDelete), (38 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(i.xQueueAddToSet), (38 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (92 bytes).
    Removing queue.o(i.xQueueCreateMutex), (34 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGenericSend), (472 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (274 bytes).
    Removing queue.o(i.xQueueGetMutexHolder), (28 bytes).
    Removing queue.o(i.xQueueGetMutexHolderFromISR), (38 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (72 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (42 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (46 bytes).
    Removing queue.o(i.xQueuePeek), (368 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (176 bytes).
    Removing queue.o(i.xQueueReceive), (360 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (202 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (48 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (78 bytes).
    Removing stream_buffer.o(i.prvBytesInBuffer), (24 bytes).
    Removing stream_buffer.o(i.prvInitialiseNewStreamBuffer), (86 bytes).
    Removing stream_buffer.o(i.prvReadBytesFromBuffer), (202 bytes).
    Removing stream_buffer.o(i.prvReadMessageFromBuffer), (72 bytes).
    Removing stream_buffer.o(i.prvWriteBytesToBuffer), (186 bytes).
    Removing stream_buffer.o(i.prvWriteMessageToBuffer), (92 bytes).
    Removing stream_buffer.o(i.ucStreamBufferGetStreamBufferType), (10 bytes).
    Removing stream_buffer.o(i.uxStreamBufferGetStreamBufferNumber), (6 bytes).
    Removing stream_buffer.o(i.vStreamBufferDelete), (56 bytes).
    Removing stream_buffer.o(i.vStreamBufferSetStreamBufferNumber), (4 bytes).
    Removing stream_buffer.o(i.xStreamBufferBytesAvailable), (42 bytes).
    Removing stream_buffer.o(i.xStreamBufferGenericCreate), (160 bytes).
    Removing stream_buffer.o(i.xStreamBufferIsEmpty), (46 bytes).
    Removing stream_buffer.o(i.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(i.xStreamBufferNextMessageLengthBytes), (120 bytes).
    Removing stream_buffer.o(i.xStreamBufferReceive), (254 bytes).
    Removing stream_buffer.o(i.xStreamBufferReceiveCompletedFromISR), (102 bytes).
    Removing stream_buffer.o(i.xStreamBufferReceiveFromISR), (184 bytes).
    Removing stream_buffer.o(i.xStreamBufferReset), (74 bytes).
    Removing stream_buffer.o(i.xStreamBufferSend), (312 bytes).
    Removing stream_buffer.o(i.xStreamBufferSendCompletedFromISR), (102 bytes).
    Removing stream_buffer.o(i.xStreamBufferSendFromISR), (184 bytes).
    Removing stream_buffer.o(i.xStreamBufferSetTriggerLevel), (50 bytes).
    Removing stream_buffer.o(i.xStreamBufferSpacesAvailable), (54 bytes).
    Removing tasks.o(i.eTaskGetState), (148 bytes).
    Removing tasks.o(i.pcTaskGetName), (48 bytes).
    Removing tasks.o(i.prvListTasksWithinSingleList), (106 bytes).
    Removing tasks.o(i.prvSearchForNameWithinSingleList), (176 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (22 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.ulTaskNotifyValueClear), (52 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark), (40 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark2), (40 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (176 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (14 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (68 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (212 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskGetInfo), (132 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (240 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (108 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (276 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (168 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (60 bytes).
    Removing tasks.o(i.xTaskAbortDelay), (160 bytes).
    Removing tasks.o(i.xTaskCatchUpTicks), (76 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (300 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (360 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetHandle), (164 bytes).
    Removing tasks.o(i.xTaskGetIdleTaskHandle), (48 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (180 bytes).

148 unused section(s) (total 11856 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\CMSIS\RTOS2\FreeRTOS\Source\freertos_evr.c 0x00000000   Number         0  freertos_evr.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\event_groups.c 0x00000000   Number         0  event_groups.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\portable\MemMang\heap_4.c 0x00000000   Number         0  heap_4.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\portable\RVDS\ARM_CM4F\port.c 0x00000000   Number         0  port.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\stream_buffer.c 0x00000000   Number         0  stream_buffer.o ABSOLUTE
    C:\Keil_v5\Packs\ARM\CMSIS-FreeRTOS\10.3.1\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    C:\\Keil_v5\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.1\\Source\\portable\\RVDS\\ARM_CM4F\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    Code\\src\\main.c                        0x00000000   Number         0  main.o ABSOLUTE
    Code\src\main.c                          0x00000000   Number         0  main.o ABSOLUTE
    Lib\\src\\MCP.c                          0x00000000   Number         0  mcp.o ABSOLUTE
    Lib\\src\\MotorControl.c                 0x00000000   Number         0  motorcontrol.o ABSOLUTE
    Lib\\src\\bsp.c                          0x00000000   Number         0  bsp.o ABSOLUTE
    Lib\\src\\encoder.c                      0x00000000   Number         0  encoder.o ABSOLUTE
    Lib\\src\\rcc.c                          0x00000000   Number         0  rcc.o ABSOLUTE
    Lib\src\MCP.c                            0x00000000   Number         0  mcp.o ABSOLUTE
    Lib\src\MotorControl.c                   0x00000000   Number         0  motorcontrol.o ABSOLUTE
    Lib\src\bsp.c                            0x00000000   Number         0  bsp.o ABSOLUTE
    Lib\src\encoder.c                        0x00000000   Number         0  encoder.o ABSOLUTE
    Lib\src\rcc.c                            0x00000000   Number         0  rcc.o ABSOLUTE
    RTE\Device\STM32F411RETx\startup_stm32f411xe.s 0x00000000   Number         0  startup_stm32f411xe.o ABSOLUTE
    RTE\Device\STM32F411RETx\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    RTE\\Device\\STM32F411RETx\\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x08000000   Section      408  startup_stm32f411xe.o(RESET)
    !!!main                                  0x08000198   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001a0   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001f0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800020c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000212   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000214   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000216   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000216   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000218   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000218   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000218   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800021e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800021e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000222   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000222   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800022c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800022c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000230   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000238   Section      190  port.o(.emb_text)
    $v0                                      0x08000238   Number         0  port.o(.emb_text)
    .text                                    0x080002f8   Section       64  startup_stm32f411xe.o(.text)
    $v0                                      0x080002f8   Number         0  startup_stm32f411xe.o(.text)
    .text                                    0x08000338   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080003c2   Section       16  aeabi_memset.o(.text)
    .text                                    0x080003d2   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000420   Section        0  heapauxi.o(.text)
    .text                                    0x08000426   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800048a   Section       68  rt_memclr.o(.text)
    .text                                    0x080004ce   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000518   Section        0  exit.o(.text)
    .text                                    0x0800052c   Section        8  libspace.o(.text)
    .text                                    0x08000534   Section        0  sys_exit.o(.text)
    .text                                    0x08000540   Section        2  use_no_semi.o(.text)
    .text                                    0x08000542   Section        0  indicate_semi.o(.text)
    i.EXTI15_10_IRQHandler                   0x08000544   Section        0  main.o(i.EXTI15_10_IRQHandler)
    i.RccClockInit                           0x08000584   Section        0  rcc.o(i.RccClockInit)
    i.SysTick_Handler                        0x080006b4   Section        0  port.o(i.SysTick_Handler)
    i.SystemInit                             0x080006e8   Section        0  system_stm32f4xx.o(i.SystemInit)
    i.TIM2_IRQHandler                        0x0800074c   Section        0  encoder.o(i.TIM2_IRQHandler)
    i.TIM5_IRQHandler                        0x080007fc   Section        0  encoder.o(i.TIM5_IRQHandler)
    i.Tim4Init                               0x08000850   Section        0  main.o(i.Tim4Init)
    i.Tim9Init                               0x080008a0   Section        0  bsp.o(i.Tim9Init)
    i.USART1_IRQHandler                      0x080008d0   Section        0  bsp.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x080008f4   Section        0  bsp.o(i.USART2_IRQHandler)
    i.buttonInit                             0x08000940   Section        0  main.o(i.buttonInit)
    i.controlTask                            0x080009e4   Section        0  main.o(i.controlTask)
    i.eTaskConfirmSleepModeStatus            0x08000ac0   Section        0  tasks.o(i.eTaskConfirmSleepModeStatus)
    i.getSpeed                               0x08000afc   Section        0  motorcontrol.o(i.getSpeed)
    i.main                                   0x08000b24   Section        0  main.o(i.main)
    i.mcpCalculateCRC                        0x08000bfc   Section        0  mcp.o(i.mcpCalculateCRC)
    i.mcpCommand                             0x08000c24   Section        0  mcp.o(i.mcpCommand)
    i.mcpGetRegister                         0x08000c74   Section        0  mcp.o(i.mcpGetRegister)
    i.mcpRamp                                0x08000ce0   Section        0  mcp.o(i.mcpRamp)
    i.measureTask                            0x08000d3c   Section        0  main.o(i.measureTask)
    i.prvAddCurrentTaskToDelayedList         0x08000d84   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x08000d85   Thumb Code   134  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x08000e28   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x08000e29   Thumb Code   156  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x08000ee0   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x08000ee1   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataToQueue                     0x08000f28   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x08000f29   Thumb Code   126  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x08000fa6   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x08000fa7   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetDisinheritPriorityAfterTimeout   0x08000fb8   Section        0  queue.o(i.prvGetDisinheritPriorityAfterTimeout)
    prvGetDisinheritPriorityAfterTimeout     0x08000fb9   Thumb Code    20  queue.o(i.prvGetDisinheritPriorityAfterTimeout)
    i.prvGetExpectedIdleTime                 0x08000fcc   Section        0  tasks.o(i.prvGetExpectedIdleTime)
    prvGetExpectedIdleTime                   0x08000fcd   Thumb Code    56  tasks.o(i.prvGetExpectedIdleTime)
    i.prvHeapInit                            0x08001018   Section        0  heap_4.o(i.prvHeapInit)
    prvHeapInit                              0x08001019   Thumb Code    98  heap_4.o(i.prvHeapInit)
    i.prvIdleTask                            0x08001094   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x08001095   Thumb Code   108  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x08001110   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x08001111   Thumb Code    46  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x0800113e   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x0800113f   Thumb Code   194  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x08001200   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x08001201   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertBlockIntoFreeList             0x08001268   Section        0  heap_4.o(i.prvInsertBlockIntoFreeList)
    prvInsertBlockIntoFreeList               0x08001269   Thumb Code    96  heap_4.o(i.prvInsertBlockIntoFreeList)
    i.prvIsQueueEmpty                        0x080012d0   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x080012d1   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvNotifyQueueSetContainer             0x080012ea   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x080012eb   Thumb Code   138  queue.o(i.prvNotifyQueueSetContainer)
    i.prvResetNextTaskUnblockTime            0x08001374   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x08001375   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvTaskExitError                       0x080013a8   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x080013a9   Thumb Code    60  port.o(i.prvTaskExitError)
    i.prvTaskIsTaskSuspended                 0x080013e8   Section        0  tasks.o(i.prvTaskIsTaskSuspended)
    prvTaskIsTaskSuspended                   0x080013e9   Thumb Code    80  tasks.o(i.prvTaskIsTaskSuspended)
    i.prvUnlockQueue                         0x08001440   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x08001441   Thumb Code   144  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x080014d0   Section        0  heap_4.o(i.pvPortMalloc)
    i.pvTaskIncrementMutexHeldCount          0x0800161c   Section        0  tasks.o(i.pvTaskIncrementMutexHeldCount)
    i.pxPortInitialiseStack                  0x0800163c   Section        0  port.o(i.pxPortInitialiseStack)
    i.setSpeed                               0x08001668   Section        0  motorcontrol.o(i.setSpeed)
    i.speedCntrTask                          0x08001680   Section        0  main.o(i.speedCntrTask)
    i.startMotor                             0x080016b0   Section        0  motorcontrol.o(i.startMotor)
    i.stopMotor                              0x080016c0   Section        0  motorcontrol.o(i.stopMotor)
    i.uart1Init                              0x080016d0   Section        0  bsp.o(i.uart1Init)
    i.uart2Init                              0x08001774   Section        0  bsp.o(i.uart2Init)
    i.uartRecive                             0x080017f8   Section        0  bsp.o(i.uartRecive)
    i.uartTransmitt                          0x08001848   Section        0  bsp.o(i.uartTransmitt)
    i.uartTransmittBuff                      0x08001858   Section        0  bsp.o(i.uartTransmittBuff)
    i.uxListRemove                           0x08001874   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x0800189c   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x080018b6   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x080018bc   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x080018f0   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x08001908   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x0800195c   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x08001998   Section        0  heap_4.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x08001a3c   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortSuppressTicksAndSleep             0x08001aa4   Section        0  port.o(i.vPortSuppressTicksAndSleep)
    i.vPortValidateInterruptPriority         0x08001bf0   Section        0  port.o(i.vPortValidateInterruptPriority)
    i.vTaskDelay                             0x08001c68   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskDelete                            0x08001cc4   Section        0  tasks.o(i.vTaskDelete)
    i.vTaskInternalSetTimeOutState           0x08001db8   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x08001dd0   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x08001ddc   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPriorityDisinheritAfterTimeout    0x08001e14   Section        0  tasks.o(i.vTaskPriorityDisinheritAfterTimeout)
    i.vTaskResume                            0x08001ef8   Section        0  tasks.o(i.vTaskResume)
    i.vTaskStartScheduler                    0x08001f88   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskStepTick                          0x08002014   Section        0  tasks.o(i.vTaskStepTick)
    i.vTaskSuspend                           0x08002054   Section        0  tasks.o(i.vTaskSuspend)
    i.vTaskSuspendAll                        0x08002148   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x08002158   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x080021e4   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x0800234c   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x080023a0   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGiveFromISR                      0x08002438   Section        0  queue.o(i.xQueueGiveFromISR)
    i.xQueueSemaphoreTake                    0x0800252c   Section        0  queue.o(i.xQueueSemaphoreTake)
    i.xTaskCheckForTimeOut                   0x080026e4   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x0800278c   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x080027ec   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskIncrementTick                     0x0800280c   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x08002954   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskPriorityInherit                   0x08002a1c   Section        0  tasks.o(i.xTaskPriorityInherit)
    i.xTaskRemoveFromEventList               0x08002ad4   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x08002b70   Section        0  tasks.o(i.xTaskResumeAll)
    x$fpl$ddiv                               0x08002c74   Section      688  ddiv.o(x$fpl$ddiv)
    $v0                                      0x08002c74   Number         0  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x08002c7b   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfltu                              0x08002f24   Section       38  dflt_clz.o(x$fpl$dfltu)
    $v0                                      0x08002f24   Number         0  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dnaninf                            0x08002f4a   Section      156  dnaninf.o(x$fpl$dnaninf)
    $v0                                      0x08002f4a   Number         0  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x08002fe6   Section       12  dretinf.o(x$fpl$dretinf)
    $v0                                      0x08002fe6   Number         0  dretinf.o(x$fpl$dretinf)
    x$fpl$fpinit                             0x08002ff2   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x08002ff2   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$usenofp                            0x08002ffc   Section        0  usenofp.o(x$fpl$usenofp)
    .data                                    0x20000000   Section       30  main.o(.data)
    TimingDelay                              0x20000000   Data           4  main.o(.data)
    uart2ReciveState                         0x2000001d   Data           1  main.o(.data)
    .data                                    0x20000020   Section       16  encoder.o(.data)
    TimingDelay                              0x20000020   Data           4  encoder.o(.data)
    .data                                    0x20000030   Section        6  bsp.o(.data)
    TimingDelay                              0x20000030   Data           4  bsp.o(.data)
    uart2ReciveState                         0x20000035   Data           1  bsp.o(.data)
    .data                                    0x20000038   Section        4  system_stm32f4xx.o(.data)
    .data                                    0x2000003c   Section       32  heap_4.o(.data)
    xStart                                   0x2000003c   Data           8  heap_4.o(.data)
    pxEnd                                    0x20000044   Data           4  heap_4.o(.data)
    xFreeBytesRemaining                      0x20000048   Data           4  heap_4.o(.data)
    xMinimumEverFreeBytesRemaining           0x2000004c   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulAllocations           0x20000050   Data           4  heap_4.o(.data)
    xNumberOfSuccessfulFrees                 0x20000054   Data           4  heap_4.o(.data)
    xBlockAllocatedBit                       0x20000058   Data           4  heap_4.o(.data)
    .data                                    0x2000005c   Section       24  port.o(.data)
    uxCriticalNesting                        0x2000005c   Data           4  port.o(.data)
    ulTimerCountsForOneTick                  0x20000060   Data           4  port.o(.data)
    xMaximumPossibleSuppressedTicks          0x20000064   Data           4  port.o(.data)
    ulStoppedTimerCompensation               0x20000068   Data           4  port.o(.data)
    ucMaxSysCallPriority                     0x2000006c   Data           1  port.o(.data)
    ulMaxPRIGROUPValue                       0x20000070   Data           4  port.o(.data)
    .data                                    0x20000074   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x20000078   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000007c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000080   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000084   Data           4  tasks.o(.data)
    xTickCount                               0x20000088   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000008c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000090   Data           4  tasks.o(.data)
    xPendedTicks                             0x20000094   Data           4  tasks.o(.data)
    xYieldPending                            0x20000098   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x2000009c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x200000a0   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x200000a4   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x200000a8   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x200000ac   Data           4  tasks.o(.data)
    .bss                                     0x200000b0   Section      257  bsp.o(.bss)
    .bss                                     0x200001b1   Section    16000  heap_4.o(.bss)
    ucHeap                                   0x200001b1   Data       16000  heap_4.o(.bss)
    .bss                                     0x20004034   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20004034   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x20004098   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200040ac   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200040c0   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x200040d4   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x200040e8   Data          20  tasks.o(.bss)
    .bss                                     0x200040fc   Section       96  libspace.o(.bss)
    HEAP                                     0x20004160   Section      512  startup_stm32f411xe.o(HEAP)
    Heap_Mem                                 0x20004160   Data         512  startup_stm32f411xe.o(HEAP)
    STACK                                    0x20004360   Section     1024  startup_stm32f411xe.o(STACK)
    Stack_Mem                                0x20004360   Data        1024  startup_stm32f411xe.o(STACK)
    __initial_sp                             0x20004760   Data           0  startup_stm32f411xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000198   Number         0  startup_stm32f411xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f411xe.o(RESET)
    __Vectors_End                            0x08000198   Data           0  startup_stm32f411xe.o(RESET)
    __main                                   0x08000199   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001a1   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001a1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001af   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001f1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800020d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000215   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000217   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000219   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000219   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000219   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800022d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800022d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x08000239   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x08000259   Thumb Code    36  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvEnableVFP  0x08000281   Thumb Code    16  port.o(.emb_text)
    PendSV_Handler                           0x08000295   Thumb Code    88  port.o(.emb_text)
    vPortGetIPSR                             0x080002f1   Thumb Code     6  port.o(.emb_text)
    Reset_Handler                            0x080002f9   Thumb Code     8  startup_stm32f411xe.o(.text)
    NMI_Handler                              0x08000301   Thumb Code     2  startup_stm32f411xe.o(.text)
    HardFault_Handler                        0x08000303   Thumb Code     2  startup_stm32f411xe.o(.text)
    MemManage_Handler                        0x08000305   Thumb Code     2  startup_stm32f411xe.o(.text)
    BusFault_Handler                         0x08000307   Thumb Code     2  startup_stm32f411xe.o(.text)
    UsageFault_Handler                       0x08000309   Thumb Code     2  startup_stm32f411xe.o(.text)
    DebugMon_Handler                         0x0800030d   Thumb Code     2  startup_stm32f411xe.o(.text)
    ADC_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream0_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream1_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream2_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream3_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream4_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream5_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream6_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA1_Stream7_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream0_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream1_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream2_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream3_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream4_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream5_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream6_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    DMA2_Stream7_IRQHandler                  0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI0_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI1_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI2_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI3_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI4_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    EXTI9_5_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    FLASH_IRQHandler                         0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    FPU_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    PVD_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RCC_IRQHandler                           0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SDIO_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI1_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI2_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI3_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI4_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    SPI5_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM3_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    TIM4_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    USART6_IRQHandler                        0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    WWDG_IRQHandler                          0x08000313   Thumb Code     0  startup_stm32f411xe.o(.text)
    __user_initial_stackheap                 0x08000315   Thumb Code     0  startup_stm32f411xe.o(.text)
    __aeabi_memcpy                           0x08000339   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000339   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0800039f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset                           0x080003c3   Thumb Code    16  aeabi_memset.o(.text)
    __aeabi_memclr4                          0x080003d3   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003d3   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003d3   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080003d7   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000421   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000423   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000425   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000427   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000427   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000427   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800046f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x0800048b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800048b   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x0800048f   Thumb Code     0  rt_memclr.o(.text)
    __user_setup_stackheap                   0x080004cf   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000519   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0800052d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800052d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0800052d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000535   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000541   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000541   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000543   Thumb Code     0  indicate_semi.o(.text)
    EXTI15_10_IRQHandler                     0x08000545   Thumb Code    50  main.o(i.EXTI15_10_IRQHandler)
    RccClockInit                             0x08000585   Thumb Code   292  rcc.o(i.RccClockInit)
    SysTick_Handler                          0x080006b5   Thumb Code    46  port.o(i.SysTick_Handler)
    SystemInit                               0x080006e9   Thumb Code    82  system_stm32f4xx.o(i.SystemInit)
    TIM2_IRQHandler                          0x0800074d   Thumb Code   146  encoder.o(i.TIM2_IRQHandler)
    TIM5_IRQHandler                          0x080007fd   Thumb Code    64  encoder.o(i.TIM5_IRQHandler)
    Tim4Init                                 0x08000851   Thumb Code    70  main.o(i.Tim4Init)
    Tim9Init                                 0x080008a1   Thumb Code    38  bsp.o(i.Tim9Init)
    USART1_IRQHandler                        0x080008d1   Thumb Code    24  bsp.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x080008f5   Thumb Code    68  bsp.o(i.USART2_IRQHandler)
    buttonInit                               0x08000941   Thumb Code   140  main.o(i.buttonInit)
    controlTask                              0x080009e5   Thumb Code   170  main.o(i.controlTask)
    eTaskConfirmSleepModeStatus              0x08000ac1   Thumb Code    42  tasks.o(i.eTaskConfirmSleepModeStatus)
    getSpeed                                 0x08000afd   Thumb Code    38  motorcontrol.o(i.getSpeed)
    main                                     0x08000b25   Thumb Code   156  main.o(i.main)
    mcpCalculateCRC                          0x08000bfd   Thumb Code    40  mcp.o(i.mcpCalculateCRC)
    mcpCommand                               0x08000c25   Thumb Code    76  mcp.o(i.mcpCommand)
    mcpGetRegister                           0x08000c75   Thumb Code   100  mcp.o(i.mcpGetRegister)
    mcpRamp                                  0x08000ce1   Thumb Code    88  mcp.o(i.mcpRamp)
    measureTask                              0x08000d3d   Thumb Code    60  main.o(i.measureTask)
    pvPortMalloc                             0x080014d1   Thumb Code   306  heap_4.o(i.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x0800161d   Thumb Code    26  tasks.o(i.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x0800163d   Thumb Code    38  port.o(i.pxPortInitialiseStack)
    setSpeed                                 0x08001669   Thumb Code    22  motorcontrol.o(i.setSpeed)
    speedCntrTask                            0x08001681   Thumb Code    42  main.o(i.speedCntrTask)
    startMotor                               0x080016b1   Thumb Code    16  motorcontrol.o(i.startMotor)
    stopMotor                                0x080016c1   Thumb Code    16  motorcontrol.o(i.stopMotor)
    uart1Init                                0x080016d1   Thumb Code   150  bsp.o(i.uart1Init)
    uart2Init                                0x08001775   Thumb Code   118  bsp.o(i.uart2Init)
    uartRecive                               0x080017f9   Thumb Code    68  bsp.o(i.uartRecive)
    uartTransmitt                            0x08001849   Thumb Code    16  bsp.o(i.uartTransmitt)
    uartTransmittBuff                        0x08001859   Thumb Code    28  bsp.o(i.uartTransmittBuff)
    uxListRemove                             0x08001875   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x0800189d   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x080018b7   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x080018bd   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x080018f1   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x08001909   Thumb Code    76  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x0800195d   Thumb Code    56  port.o(i.vPortExitCritical)
    vPortFree                                0x08001999   Thumb Code   150  heap_4.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x08001a3d   Thumb Code    86  port.o(i.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x08001aa5   Thumb Code   320  port.o(i.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x08001bf1   Thumb Code   106  port.o(i.vPortValidateInterruptPriority)
    vTaskDelay                               0x08001c69   Thumb Code    82  tasks.o(i.vTaskDelay)
    vTaskDelete                              0x08001cc5   Thumb Code   202  tasks.o(i.vTaskDelete)
    vTaskInternalSetTimeOutState             0x08001db9   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08001dd1   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08001ddd   Thumb Code    52  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x08001e15   Thumb Code   216  tasks.o(i.vTaskPriorityDisinheritAfterTimeout)
    vTaskResume                              0x08001ef9   Thumb Code   128  tasks.o(i.vTaskResume)
    vTaskStartScheduler                      0x08001f89   Thumb Code   110  tasks.o(i.vTaskStartScheduler)
    vTaskStepTick                            0x08002015   Thumb Code    56  tasks.o(i.vTaskStepTick)
    vTaskSuspend                             0x08002055   Thumb Code   210  tasks.o(i.vTaskSuspend)
    vTaskSuspendAll                          0x08002149   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x08002159   Thumb Code   118  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x080021e5   Thumb Code   330  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x0800234d   Thumb Code    84  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x080023a1   Thumb Code   146  queue.o(i.xQueueGenericReset)
    xQueueGiveFromISR                        0x08002439   Thumb Code   244  queue.o(i.xQueueGiveFromISR)
    xQueueSemaphoreTake                      0x0800252d   Thumb Code   434  queue.o(i.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x080026e5   Thumb Code   156  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x0800278d   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x080027ed   Thumb Code    24  tasks.o(i.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x0800280d   Thumb Code   282  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08002955   Thumb Code   188  tasks.o(i.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08002a1d   Thumb Code   172  tasks.o(i.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08002ad5   Thumb Code   132  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08002b71   Thumb Code   224  tasks.o(i.xTaskResumeAll)
    __aeabi_ddiv                             0x08002c75   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x08002c75   Thumb Code   552  ddiv.o(x$fpl$ddiv)
    __aeabi_ui2d                             0x08002f25   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x08002f25   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __fpl_dnaninf                            0x08002f4b   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x08002fe7   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    _fp_init                                 0x08002ff3   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08002ffb   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08002ffb   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x08002ffc   Number         0  anon$$obj.o(Region$$Table)
    __I$use$fp                               0x08002ffc   Number         0  usenofp.o(x$fpl$usenofp)
    Region$$Table$$Limit                     0x0800301c   Number         0  anon$$obj.o(Region$$Table)
    motorState                               0x20000004   Data           1  main.o(.data)
    changeSpeed                              0x20000005   Data           1  main.o(.data)
    commandQueue                             0x20000008   Data           4  main.o(.data)
    measureTaskHandle                        0x2000000c   Data           4  main.o(.data)
    speedCntrTaskHandle                      0x20000010   Data           4  main.o(.data)
    uart2ReciveSemaphore                     0x20000014   Data           4  main.o(.data)
    buttonClickSemaphore                     0x20000018   Data           4  main.o(.data)
    err                                      0x2000001c   Data           1  main.o(.data)
    encoderCount                             0x20000024   Data           2  encoder.o(.data)
    statusFlag                               0x20000026   Data           1  encoder.o(.data)
    speed                                    0x20000028   Data           8  encoder.o(.data)
    reciveStatus                             0x20000034   Data           1  bsp.o(.data)
    SystemCoreClock                          0x20000038   Data           4  system_stm32f4xx.o(.data)
    pxCurrentTCB                             0x20000074   Data           4  tasks.o(.data)
    frameBuff                                0x200000b0   Data         257  bsp.o(.bss)
    __libspace_start                         0x200040fc   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000415c   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080002f9

  Load Region LR_1 (Base: 0x08000000, Size: 0x000030cc, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000301c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000198   Data   RO          500    RESET               startup_stm32f411xe.o
    0x08000198   0x08000198   0x00000008   Code   RO         1675  * !!!main             c_w.l(__main.o)
    0x080001a0   0x080001a0   0x00000034   Code   RO         1851    !!!scatter          c_w.l(__scatter.o)
    0x080001d4   0x080001d4   0x0000001a   Code   RO         1853    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ee   0x080001ee   0x00000002   PAD
    0x080001f0   0x080001f0   0x0000001c   Code   RO         1855    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800020c   0x0800020c   0x00000002   Code   RO         1721    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020e   0x0800020e   0x00000004   Code   RO         1727    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1730    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1733    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1735    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1737    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1740    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1742    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1744    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1746    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1748    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1750    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1752    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1754    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1756    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1758    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1760    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1764    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1766    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1768    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1770    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1771    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000214   0x08000214   0x00000002   Code   RO         1791    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1804    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1806    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1809    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1812    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1814    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         1817    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000216   0x08000216   0x00000002   Code   RO         1818    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         1687    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000218   0x08000218   0x00000000   Code   RO         1698    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000218   0x08000218   0x00000006   Code   RO         1710    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         1700    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0800021e   0x0800021e   0x00000004   Code   RO         1701    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000000   Code   RO         1703    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000008   Code   RO         1704    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022a   0x0800022a   0x00000002   Code   RO         1725    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800022c   0x0800022c   0x00000000   Code   RO         1773    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800022c   0x0800022c   0x00000004   Code   RO         1774    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000006   Code   RO         1775    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000236   0x08000236   0x00000002   PAD
    0x08000238   0x08000238   0x000000be   Code   RO          774    .emb_text           port.o
    0x080002f6   0x080002f6   0x00000002   PAD
    0x080002f8   0x080002f8   0x00000040   Code   RO          501  * .text               startup_stm32f411xe.o
    0x08000338   0x08000338   0x0000008a   Code   RO         1665    .text               c_w.l(rt_memcpy_v6.o)
    0x080003c2   0x080003c2   0x00000010   Code   RO         1669    .text               c_w.l(aeabi_memset.o)
    0x080003d2   0x080003d2   0x0000004e   Code   RO         1671    .text               c_w.l(rt_memclr_w.o)
    0x08000420   0x08000420   0x00000006   Code   RO         1673    .text               c_w.l(heapauxi.o)
    0x08000426   0x08000426   0x00000064   Code   RO         1688    .text               c_w.l(rt_memcpy_w.o)
    0x0800048a   0x0800048a   0x00000044   Code   RO         1690    .text               c_w.l(rt_memclr.o)
    0x080004ce   0x080004ce   0x0000004a   Code   RO         1712    .text               c_w.l(sys_stackheap_outer.o)
    0x08000518   0x08000518   0x00000012   Code   RO         1714    .text               c_w.l(exit.o)
    0x0800052a   0x0800052a   0x00000002   PAD
    0x0800052c   0x0800052c   0x00000008   Code   RO         1722    .text               c_w.l(libspace.o)
    0x08000534   0x08000534   0x0000000c   Code   RO         1783    .text               c_w.l(sys_exit.o)
    0x08000540   0x08000540   0x00000002   Code   RO         1794    .text               c_w.l(use_no_semi.o)
    0x08000542   0x08000542   0x00000000   Code   RO         1796    .text               c_w.l(indicate_semi.o)
    0x08000542   0x08000542   0x00000002   PAD
    0x08000544   0x08000544   0x00000040   Code   RO            4    i.EXTI15_10_IRQHandler  main.o
    0x08000584   0x08000584   0x00000130   Code   RO          231    i.RccClockInit      rcc.o
    0x080006b4   0x080006b4   0x00000034   Code   RO          775    i.SysTick_Handler   port.o
    0x080006e8   0x080006e8   0x00000064   Code   RO          509    i.SystemInit        system_stm32f4xx.o
    0x0800074c   0x0800074c   0x000000b0   Code   RO          177    i.TIM2_IRQHandler   encoder.o
    0x080007fc   0x080007fc   0x00000054   Code   RO          178    i.TIM5_IRQHandler   encoder.o
    0x08000850   0x08000850   0x00000050   Code   RO            5    i.Tim4Init          main.o
    0x080008a0   0x080008a0   0x00000030   Code   RO          426    i.Tim9Init          bsp.o
    0x080008d0   0x080008d0   0x00000024   Code   RO          427    i.USART1_IRQHandler  bsp.o
    0x080008f4   0x080008f4   0x0000004c   Code   RO          428    i.USART2_IRQHandler  bsp.o
    0x08000940   0x08000940   0x000000a4   Code   RO            6    i.buttonInit        main.o
    0x080009e4   0x080009e4   0x000000dc   Code   RO            8    i.controlTask       main.o
    0x08000ac0   0x08000ac0   0x0000003c   Code   RO         1250    i.eTaskConfirmSleepModeStatus  tasks.o
    0x08000afc   0x08000afc   0x00000026   Code   RO          265    i.getSpeed          motorcontrol.o
    0x08000b22   0x08000b22   0x00000002   PAD
    0x08000b24   0x08000b24   0x000000d8   Code   RO            9    i.main              main.o
    0x08000bfc   0x08000bfc   0x00000028   Code   RO          369    i.mcpCalculateCRC   mcp.o
    0x08000c24   0x08000c24   0x00000050   Code   RO          370    i.mcpCommand        mcp.o
    0x08000c74   0x08000c74   0x0000006c   Code   RO          371    i.mcpGetRegister    mcp.o
    0x08000ce0   0x08000ce0   0x0000005c   Code   RO          372    i.mcpRamp           mcp.o
    0x08000d3c   0x08000d3c   0x00000048   Code   RO           10    i.measureTask       main.o
    0x08000d84   0x08000d84   0x000000a4   Code   RO         1253    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000e28   0x08000e28   0x000000b8   Code   RO         1254    i.prvAddNewTaskToReadyList  tasks.o
    0x08000ee0   0x08000ee0   0x00000048   Code   RO         1255    i.prvCheckTasksWaitingTermination  tasks.o
    0x08000f28   0x08000f28   0x0000007e   Code   RO          858    i.prvCopyDataToQueue  queue.o
    0x08000fa6   0x08000fa6   0x00000012   Code   RO         1256    i.prvDeleteTCB      tasks.o
    0x08000fb8   0x08000fb8   0x00000014   Code   RO          859    i.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x08000fcc   0x08000fcc   0x0000004c   Code   RO         1257    i.prvGetExpectedIdleTime  tasks.o
    0x08001018   0x08001018   0x0000007c   Code   RO          707    i.prvHeapInit       heap_4.o
    0x08001094   0x08001094   0x0000007c   Code   RO         1258    i.prvIdleTask       tasks.o
    0x08001110   0x08001110   0x0000002e   Code   RO          861    i.prvInitialiseNewQueue  queue.o
    0x0800113e   0x0800113e   0x000000c2   Code   RO         1259    i.prvInitialiseNewTask  tasks.o
    0x08001200   0x08001200   0x00000068   Code   RO         1260    i.prvInitialiseTaskLists  tasks.o
    0x08001268   0x08001268   0x00000068   Code   RO          708    i.prvInsertBlockIntoFreeList  heap_4.o
    0x080012d0   0x080012d0   0x0000001a   Code   RO          862    i.prvIsQueueEmpty   queue.o
    0x080012ea   0x080012ea   0x0000008a   Code   RO          864    i.prvNotifyQueueSetContainer  queue.o
    0x08001374   0x08001374   0x00000034   Code   RO         1262    i.prvResetNextTaskUnblockTime  tasks.o
    0x080013a8   0x080013a8   0x00000040   Code   RO          776    i.prvTaskExitError  port.o
    0x080013e8   0x080013e8   0x00000058   Code   RO         1265    i.prvTaskIsTaskSuspended  tasks.o
    0x08001440   0x08001440   0x00000090   Code   RO          865    i.prvUnlockQueue    queue.o
    0x080014d0   0x080014d0   0x0000014c   Code   RO          709    i.pvPortMalloc      heap_4.o
    0x0800161c   0x0800161c   0x00000020   Code   RO         1266    i.pvTaskIncrementMutexHeldCount  tasks.o
    0x0800163c   0x0800163c   0x0000002c   Code   RO          777    i.pxPortInitialiseStack  port.o
    0x08001668   0x08001668   0x00000016   Code   RO          269    i.setSpeed          motorcontrol.o
    0x0800167e   0x0800167e   0x00000002   PAD
    0x08001680   0x08001680   0x00000030   Code   RO           11    i.speedCntrTask     main.o
    0x080016b0   0x080016b0   0x00000010   Code   RO          272    i.startMotor        motorcontrol.o
    0x080016c0   0x080016c0   0x00000010   Code   RO          273    i.stopMotor         motorcontrol.o
    0x080016d0   0x080016d0   0x000000a4   Code   RO          429    i.uart1Init         bsp.o
    0x08001774   0x08001774   0x00000084   Code   RO          430    i.uart2Init         bsp.o
    0x080017f8   0x080017f8   0x00000050   Code   RO          431    i.uartRecive        bsp.o
    0x08001848   0x08001848   0x00000010   Code   RO          432    i.uartTransmitt     bsp.o
    0x08001858   0x08001858   0x0000001c   Code   RO          433    i.uartTransmittBuff  bsp.o
    0x08001874   0x08001874   0x00000028   Code   RO          668    i.uxListRemove      list.o
    0x0800189c   0x0800189c   0x0000001a   Code   RO          669    i.vListInitialise   list.o
    0x080018b6   0x080018b6   0x00000006   Code   RO          670    i.vListInitialiseItem  list.o
    0x080018bc   0x080018bc   0x00000034   Code   RO          671    i.vListInsert       list.o
    0x080018f0   0x080018f0   0x00000018   Code   RO          672    i.vListInsertEnd    list.o
    0x08001908   0x08001908   0x00000054   Code   RO          779    i.vPortEnterCritical  port.o
    0x0800195c   0x0800195c   0x0000003c   Code   RO          780    i.vPortExitCritical  port.o
    0x08001998   0x08001998   0x000000a4   Code   RO          710    i.vPortFree         heap_4.o
    0x08001a3c   0x08001a3c   0x00000068   Code   RO          781    i.vPortSetupTimerInterrupt  port.o
    0x08001aa4   0x08001aa4   0x0000014c   Code   RO          782    i.vPortSuppressTicksAndSleep  port.o
    0x08001bf0   0x08001bf0   0x00000078   Code   RO          783    i.vPortValidateInterruptPriority  port.o
    0x08001c68   0x08001c68   0x0000005c   Code   RO         1277    i.vTaskDelay        tasks.o
    0x08001cc4   0x08001cc4   0x000000f4   Code   RO         1279    i.vTaskDelete       tasks.o
    0x08001db8   0x08001db8   0x00000018   Code   RO         1282    i.vTaskInternalSetTimeOutState  tasks.o
    0x08001dd0   0x08001dd0   0x0000000c   Code   RO         1283    i.vTaskMissedYield  tasks.o
    0x08001ddc   0x08001ddc   0x00000038   Code   RO         1285    i.vTaskPlaceOnEventList  tasks.o
    0x08001e14   0x08001e14   0x000000e4   Code   RO         1287    i.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08001ef8   0x08001ef8   0x00000090   Code   RO         1290    i.vTaskResume       tasks.o
    0x08001f88   0x08001f88   0x0000008c   Code   RO         1293    i.vTaskStartScheduler  tasks.o
    0x08002014   0x08002014   0x00000040   Code   RO         1294    i.vTaskStepTick     tasks.o
    0x08002054   0x08002054   0x000000f4   Code   RO         1295    i.vTaskSuspend      tasks.o
    0x08002148   0x08002148   0x00000010   Code   RO         1296    i.vTaskSuspendAll   tasks.o
    0x08002158   0x08002158   0x0000008c   Code   RO         1297    i.vTaskSwitchContext  tasks.o
    0x080021e4   0x080021e4   0x00000168   Code   RO          784    i.xPortStartScheduler  port.o
    0x0800234c   0x0800234c   0x00000054   Code   RO          877    i.xQueueGenericCreate  queue.o
    0x080023a0   0x080023a0   0x00000098   Code   RO          878    i.xQueueGenericReset  queue.o
    0x08002438   0x08002438   0x000000f4   Code   RO          883    i.xQueueGiveFromISR  queue.o
    0x0800252c   0x0800252c   0x000001b8   Code   RO          894    i.xQueueSemaphoreTake  queue.o
    0x080026e4   0x080026e4   0x000000a8   Code   RO         1300    i.xTaskCheckForTimeOut  tasks.o
    0x0800278c   0x0800278c   0x00000060   Code   RO         1301    i.xTaskCreate       tasks.o
    0x080027ec   0x080027ec   0x00000020   Code   RO         1307    i.xTaskGetSchedulerState  tasks.o
    0x0800280c   0x0800280c   0x00000148   Code   RO         1310    i.xTaskIncrementTick  tasks.o
    0x08002954   0x08002954   0x000000c8   Code   RO         1313    i.xTaskPriorityDisinherit  tasks.o
    0x08002a1c   0x08002a1c   0x000000b8   Code   RO         1314    i.xTaskPriorityInherit  tasks.o
    0x08002ad4   0x08002ad4   0x0000009c   Code   RO         1315    i.xTaskRemoveFromEventList  tasks.o
    0x08002b70   0x08002b70   0x00000104   Code   RO         1316    i.xTaskResumeAll    tasks.o
    0x08002c74   0x08002c74   0x000002b0   Code   RO         1678    x$fpl$ddiv          fz_wm.l(ddiv.o)
    0x08002f24   0x08002f24   0x00000026   Code   RO         1681    x$fpl$dfltu         fz_wm.l(dflt_clz.o)
    0x08002f4a   0x08002f4a   0x0000009c   Code   RO         1692    x$fpl$dnaninf       fz_wm.l(dnaninf.o)
    0x08002fe6   0x08002fe6   0x0000000c   Code   RO         1694    x$fpl$dretinf       fz_wm.l(dretinf.o)
    0x08002ff2   0x08002ff2   0x0000000a   Code   RO         1781    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08002ffc   0x08002ffc   0x00000000   Code   RO         1696    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x08002ffc   0x08002ffc   0x00000020   Data   RO         1849    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0800301c, Size: 0x000000b0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0800301c   0x0000001e   Data   RW           12    .data               main.o
    0x2000001e   0x0800303a   0x00000002   PAD
    0x20000020   0x0800303c   0x00000010   Data   RW          182    .data               encoder.o
    0x20000030   0x0800304c   0x00000006   Data   RW          435    .data               bsp.o
    0x20000036   0x08003052   0x00000002   PAD
    0x20000038   0x08003054   0x00000004   Data   RW          511    .data               system_stm32f4xx.o
    0x2000003c   0x08003058   0x00000020   Data   RW          716    .data               heap_4.o
    0x2000005c   0x08003078   0x00000018   Data   RW          785    .data               port.o
    0x20000074   0x08003090   0x0000003c   Data   RW         1319    .data               tasks.o


    Execution Region ER_ZI (Exec base: 0x200000b0, Load base: 0x080030cc, Size: 0x000046b0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000b0        -       0x00000101   Zero   RW          434    .bss                bsp.o
    0x200001b1        -       0x00003e80   Zero   RW          715    .bss                heap_4.o
    0x20004031   0x080030cc   0x00000003   PAD
    0x20004034        -       0x000000c8   Zero   RW         1318    .bss                tasks.o
    0x200040fc        -       0x00000060   Zero   RW         1723    .bss                c_w.l(libspace.o)
    0x2000415c   0x080030cc   0x00000004   PAD
    0x20004160        -       0x00000200   Zero   RW          499    HEAP                startup_stm32f411xe.o
    0x20004360        -       0x00000400   Zero   RW          498    STACK               startup_stm32f411xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       580         70          0          6        257      35164   bsp.o
       260         50          0         16          0       1340   encoder.o
         0          0          0          0          0      10636   event_groups.o
       724         74          0         32      16000       7255   heap_4.o
       148          0          0          0          0       3382   list.o
       864        176          0         30          0     368855   main.o
       320         16          0          0          0       3251   mcp.o
        92          0          0          0          0       2671   motorcontrol.o
      1410        118          0         24          0      13030   port.o
      1420         12          0          0          0      13401   queue.o
       304         12          0          0          0        667   rcc.o
        64         26        408          0       1536        856   startup_stm32f411xe.o
       100         18          0          4          0       1323   system_stm32f4xx.o
      3996        528          0         60        200      31698   tasks.o

    ----------------------------------------------------------------------
     10288       1100        440        176      17996     493529   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          4          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
       688        140          0          0          0        256   ddiv.o
        38          0          0          0          0        116   dflt_clz.o
       156          4          0          0          0        140   dnaninf.o
        12          0          0          0          0        116   dretinf.o
        10          0          0          0          0        116   fpinit.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      1588        160          0          0        100       1692   Library Totals
         8          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       676         16          0          0         96        948   c_w.l
       904        144          0          0          0        744   fz_wm.l

    ----------------------------------------------------------------------
      1588        160          0          0        100       1692   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11876       1260        440        176      18096     486105   Grand Totals
     11876       1260        440        176      18096     486105   ELF Image Totals
     11876       1260        440        176          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12316 (  12.03kB)
    Total RW  Size (RW Data + ZI Data)             18272 (  17.84kB)
    Total ROM Size (Code + RO Data + RW Data)      12492 (  12.20kB)

==============================================================================

